import pandas as pd
import os
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier, plot_tree
from sklearn.metrics import accuracy_score, classification_report
import matplotlib.pyplot as plt
import joblib

if not os.path.exists("iris.csv"):
    iris = load_iris()
    df = pd.DataFrame(data=iris.data, columns=['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm'])
    df['Species'] = pd.Categorical.from_codes(iris.target, iris.target_names)
    df.to_csv("iris.csv", index=False)
else:
    df = pd.read_csv("iris.csv")

print(df.head())
print(df.describe())
print(df.isnull().sum())

X = df.drop('Species', axis=1)
y = df['Species']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

dt_model = DecisionTreeClassifier(random_state=42)
dt_model.fit(X_train, y_train)

y_pred = dt_model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy: {accuracy}')
print(classification_report(y_test, y_pred))

joblib.dump(dt_model, 'iris_decision_tree.pkl')
dt_model = joblib.load('iris_decision_tree.pkl')

new_data = pd.DataFrame({
    'SepalLengthCm': [5.1, 6.2, 4.7],
    'SepalWidthCm': [3.5, 3.4, 3.2],
    'PetalLengthCm': [1.4, 5.4, 1.6],
    'PetalWidthCm': [0.2, 2.3, 0.2]
})

predictions = dt_model.predict(new_data)
for pred in predictions:
    print(pred)

plt.figure(figsize=(12, 8))
plot_tree(dt_model, feature_names=list(X.columns),
          class_names=df['Species'].unique().tolist(), filled=True)
plt.show()
